package com.dormhelios.view;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import java.awt.Cursor;
import java.awt.Component;

public class TenantDashboardPanel extends javax.swing.JPanel {

    /**
     * Creates new form DashboardPanel
     */
    public TenantDashboardPanel() {
        initComponents();
        applyCustomStyling(); // Apply our custom styling after initialization
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        tenantDashboardHeaderLabel = new javax.swing.JLabel();
        announcementsCard = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        announcementsTextArea = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        roomInformationCard = new javax.swing.JPanel();
        revenueTitleLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        roomNumberValueLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        roomNumberValueLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        availableSlotsValueLabel = new javax.swing.JLabel();
        revenueTitleLabel1 = new javax.swing.JLabel();
        rulesLabel = new javax.swing.JLabel();
        totalTenantsCard1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        roomInformationCard1 = new javax.swing.JPanel();
        revenueTitleLabel2 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        landlordNameValueLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        landlordContactNumberValueLabel = new javax.swing.JLabel();

        jFormattedTextField1.setText("jFormattedTextField1");

        setBackground(new java.awt.Color(250, 250, 250));
        setPreferredSize(new java.awt.Dimension(1023, 787));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        tenantDashboardHeaderLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        tenantDashboardHeaderLabel.setText("Welcome, Name");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(tenantDashboardHeaderLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tenantDashboardHeaderLabel)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        announcementsCard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel2.setText("Announcements");

        announcementsTextArea.setEditable(false);
        announcementsTextArea.setColumns(20);
        announcementsTextArea.setLineWrap(true);
        announcementsTextArea.setRows(5);
        announcementsTextArea.setWrapStyleWord(true);
        jScrollPane3.setViewportView(announcementsTextArea);

        javax.swing.GroupLayout announcementsCardLayout = new javax.swing.GroupLayout(announcementsCard);
        announcementsCard.setLayout(announcementsCardLayout);
        announcementsCardLayout.setHorizontalGroup(
            announcementsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(announcementsCardLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(announcementsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(announcementsCardLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        announcementsCardLayout.setVerticalGroup(
            announcementsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(announcementsCardLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addGap(1, 1, 1)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        revenueTitleLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        revenueTitleLabel.setText("My Room Information");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Room Number: ");

        roomNumberValueLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        roomNumberValueLabel.setText("104");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Monthly Payment");

        roomNumberValueLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        roomNumberValueLabel1.setText("P5,000.00");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Available Slots: ");

        availableSlotsValueLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        availableSlotsValueLabel.setText("4");

        revenueTitleLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        revenueTitleLabel1.setText("Rules");

        rulesLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rulesLabel.setText("<html>\n1. Keep everything clean<br />\n2. Don't be too loud<br />\n3. Throw your garbage away\n</html>");

        javax.swing.GroupLayout roomInformationCardLayout = new javax.swing.GroupLayout(roomInformationCard);
        roomInformationCard.setLayout(roomInformationCardLayout);
        roomInformationCardLayout.setHorizontalGroup(
            roomInformationCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomInformationCardLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(roomInformationCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomInformationCardLayout.createSequentialGroup()
                        .addGroup(roomInformationCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(revenueTitleLabel)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roomInformationCardLayout.createSequentialGroup()
                        .addGroup(roomInformationCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(roomInformationCardLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(availableSlotsValueLabel))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roomInformationCardLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(roomNumberValueLabel))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roomInformationCardLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(roomNumberValueLabel1)))
                        .addGap(33, 33, 33))
                    .addGroup(roomInformationCardLayout.createSequentialGroup()
                        .addGroup(roomInformationCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rulesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(revenueTitleLabel1))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        roomInformationCardLayout.setVerticalGroup(
            roomInformationCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomInformationCardLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(revenueTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roomInformationCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(roomNumberValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roomInformationCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(roomNumberValueLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roomInformationCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(availableSlotsValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(revenueTitleLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rulesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        totalTenantsCard1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel3.setText("Payment History");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date Paid", "Amount", "Month Covered", "Method", "Show QR"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout totalTenantsCard1Layout = new javax.swing.GroupLayout(totalTenantsCard1);
        totalTenantsCard1.setLayout(totalTenantsCard1Layout);
        totalTenantsCard1Layout.setHorizontalGroup(
            totalTenantsCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalTenantsCard1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(totalTenantsCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(jSeparator3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 898, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        totalTenantsCard1Layout.setVerticalGroup(
            totalTenantsCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalTenantsCard1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        revenueTitleLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        revenueTitleLabel2.setText("Landlord Information");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Landlord:");

        landlordNameValueLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        landlordNameValueLabel.setText("[name of landlord]");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Contact Number");

        landlordContactNumberValueLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        landlordContactNumberValueLabel.setText("09222222222");

        javax.swing.GroupLayout roomInformationCard1Layout = new javax.swing.GroupLayout(roomInformationCard1);
        roomInformationCard1.setLayout(roomInformationCard1Layout);
        roomInformationCard1Layout.setHorizontalGroup(
            roomInformationCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomInformationCard1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(roomInformationCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomInformationCard1Layout.createSequentialGroup()
                        .addGroup(roomInformationCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(revenueTitleLabel2)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roomInformationCard1Layout.createSequentialGroup()
                        .addGroup(roomInformationCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roomInformationCard1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(landlordNameValueLabel))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roomInformationCard1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(landlordContactNumberValueLabel)))
                        .addGap(33, 33, 33))))
        );
        roomInformationCard1Layout.setVerticalGroup(
            roomInformationCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomInformationCard1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(revenueTitleLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roomInformationCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(landlordNameValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roomInformationCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(landlordContactNumberValueLabel))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roomInformationCard1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(totalTenantsCard1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(announcementsCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(91, 91, 91)
                            .addComponent(roomInformationCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(announcementsCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roomInformationCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(totalTenantsCard1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(roomInformationCard1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Sets the tenant's name in the dashboard header
     * 
     * @param name The tenant's name to display
     */
    public void setTenantName(String name) {
        tenantDashboardHeaderLabel.setText("Welcome, " + name);
    }
    
    /**
     * Sets the announcements text
     * 
     * @param announcements The announcements text to display
     */
    public void setAnnouncements(String announcements) {
        announcementsTextArea.setText(announcements);
    }
    
    /**
     * Sets the room information
     * 
     * @param roomNumber The room number
     * @param monthlyPayment The monthly payment amount (formatted)
     * @param availableSlots The number of available slots
     * @param rules The rules text in HTML format
     */
    public void setRoomInformation(String roomNumber, String monthlyPayment, String availableSlots, String rules) {
        roomNumberValueLabel.setText(roomNumber);
        roomNumberValueLabel1.setText(monthlyPayment);
        availableSlotsValueLabel.setText(availableSlots);
        rulesLabel.setText(rules);
    }
    
    /**
     * Sets the landlord information
     * 
     * @param name The landlord's name
     * @param contactNumber The landlord's contact number
     */
    public void setLandlordInformation(String name, String contactNumber) {
        landlordNameValueLabel.setText(name);
        landlordContactNumberValueLabel.setText(contactNumber);
    }
    
    /**
     * Sets the payment history table model
     * 
     * @param model The table model containing payment history data
     */
    public void setPaymentHistoryTableModel(javax.swing.table.TableModel model) {
        jTable1.setModel(model);
        
        // Customize table appearance
        jTable1.setRowHeight(25);
        jTable1.setIntercellSpacing(new java.awt.Dimension(10, 5));
        jTable1.setShowGrid(false);
        jTable1.setFillsViewportHeight(true);
        
        // Set column widths
        if (jTable1.getColumnCount() >= 5) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(100); // Date
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100); // Amount
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(150); // Month Covered
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(100); // Method
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);  // QR
        }
    }
    
    /**
     * Adds an action listener to the specified column in the payment history table
     * 
     * @param column The column index to add the listener to
     * @param listener The action listener to add
     */
    public void addTableColumnActionListener(int column, java.awt.event.MouseAdapter listener) {
        jTable1.addMouseListener(listener);
    }
    
    /**
     * Gets the payment history table
     * 
     * @return The JTable containing payment history
     */
    public javax.swing.JTable getPaymentHistoryTable() {
        return jTable1;
    }
    
    /**
     * Creates and displays a payment status bar chart using JFreeChart
     * 
     * @param months The month labels for the x-axis
     * @param paidCounts The number of paid payments for each month
     * @param unpaidCounts The number of unpaid/outstanding payments for each month
     */
    
    /**
     * Applies custom Tailwind-inspired styling to the dashboard panel components.
     * Call this method after initComponents() in the constructor.
     */
    private void applyCustomStyling() {
        // Tailwind color palette
        Color white = new Color(255, 255, 255);       // white
        Color primary = new Color(59, 130, 246);      // blue-500 
        Color primaryLight = new Color(191, 219, 254); // blue-200
        Color primaryDark = new Color(37, 99, 235);   // blue-600
        Color secondary = new Color(79, 70, 229);     // indigo-600
        Color secondaryLight = new Color(224, 231, 255); // indigo-100
        Color success = new Color(34, 197, 94);       // green-500
        Color successLight = new Color(187, 247, 208); // green-100
        Color danger = new Color(239, 68, 68);        // red-500
        Color warning = new Color(245, 158, 11);      // amber-500
        Color warningLight = new Color(254, 240, 138); // amber-100
        Color bgLight = new Color(248, 250, 252);     // slate-50
        Color bgGray = new Color(243, 244, 246);      // gray-100
        Color textDark = new Color(15, 23, 42);       // slate-900
        Color textGray = new Color(71, 85, 105);      // slate-600
        Color textLight = new Color(148, 163, 184);   // slate-400
        Color borderColor = new Color(226, 232, 240); // slate-200
        Color cardHoverBg = new Color(241, 245, 249); // slate-100

        // Set background color for the entire panel
        this.setBackground(bgLight);
        
        // Style welcome panel with gradient-like effect
        jPanel1.setBackground(white);
        jPanel1.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createMatteBorder(0, 0, 1, 0, borderColor),
            BorderFactory.createEmptyBorder(12, 20, 12, 20)
        ));
        tenantDashboardHeaderLabel.setFont(new Font("Segoe UI Semibold", Font.BOLD, 28));
        tenantDashboardHeaderLabel.setForeground(textDark);
        
        // Style announcement card
        styleCard(announcementsCard, primary, primaryLight, "Announcements", jLabel2);
        announcementsTextArea.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        announcementsTextArea.setBackground(white);
        announcementsTextArea.setBorder(BorderFactory.createEmptyBorder(8, 8, 8, 8));
        announcementsTextArea.setSelectionColor(primaryLight);
        jScrollPane3.setBorder(BorderFactory.createEmptyBorder());
        jScrollPane3.getViewport().setBackground(white);
        
        // Style room information card
        styleCard(roomInformationCard, secondary, secondaryLight, "My Room Information", revenueTitleLabel);
        styleLabel(jLabel4, textGray, 14, Font.PLAIN);
        styleLabel(jLabel5, textGray, 14, Font.PLAIN);
        styleLabel(jLabel6, textGray, 14, Font.PLAIN);
        styleLabel(roomNumberValueLabel, textDark, 14, Font.BOLD);
        styleLabel(roomNumberValueLabel1, secondary, 16, Font.BOLD);
        styleLabel(availableSlotsValueLabel, textDark, 14, Font.BOLD);
        styleLabel(revenueTitleLabel1, textDark, 14, Font.BOLD);
        rulesLabel.setFont(new Font("Segoe UI", Font.PLAIN, 13));
        rulesLabel.setForeground(textGray);
        
        // Style payment history panel
        styleCard(totalTenantsCard1, success, successLight, "Payment History", jLabel3);
        // Style table
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(false);
        jTable1.setRowHeight(32);
        jTable1.setGridColor(new Color(226, 232, 240)); // slate-200
        jTable1.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 13));
        jTable1.getTableHeader().setBackground(bgGray);
        jTable1.getTableHeader().setForeground(textDark);
        jTable1.setSelectionBackground(primaryLight);
        jTable1.setFont(new Font("Segoe UI", Font.PLAIN, 13));
        jScrollPane1.setBorder(BorderFactory.createEmptyBorder());
        jScrollPane1.getViewport().setBackground(white);
        
        // Style landlord information card
        styleCard(roomInformationCard1, warning, warningLight, "Landlord Information", revenueTitleLabel2);
        styleLabel(jLabel7, textGray, 14, Font.PLAIN);
        styleLabel(jLabel8, textGray, 14, Font.PLAIN);
        styleLabel(landlordNameValueLabel, textDark, 14, Font.BOLD);
        styleLabel(landlordContactNumberValueLabel, textDark, 14, Font.BOLD);
        
        // Apply consistent styling to separators
        jSeparator1.setForeground(borderColor);
        jSeparator2.setForeground(borderColor);
        jSeparator3.setForeground(borderColor);
        jSeparator4.setForeground(borderColor);
    }

    /**
     * Helper method to style a card with Tailwind-inspired design
     * 
     * @param card The panel to style
     * @param accentColor The accent color for the card
     * @param lightColor The light background color
     * @param title The title of the card
     * @param titleLabel The title label component
     */
    private void styleCard(JPanel card, Color accentColor, Color lightColor, String title, JLabel titleLabel) {
        // Set card background and border
        card.setBackground(Color.WHITE);
        card.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(accentColor.getRed(), accentColor.getGreen(), accentColor.getBlue(), 90)),
            BorderFactory.createCompoundBorder(
                BorderFactory.createLineBorder(new Color(226, 232, 240), 1, true),
                BorderFactory.createEmptyBorder(12, 16, 14, 16)
            )
        ));
        
        // Add a subtle rounded corner effect
        card.putClientProperty("JComponent.roundRect", true);
        
        // Style the title
        if (titleLabel != null) {
            titleLabel.setFont(new Font("Segoe UI", Font.BOLD, 18));
            titleLabel.setForeground(accentColor);
        }
        
        // Add a subtle hover effect
        card.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                card.setBorder(BorderFactory.createCompoundBorder(
                    BorderFactory.createMatteBorder(0, 0, 2, 0, accentColor),
                    BorderFactory.createCompoundBorder(
                        BorderFactory.createLineBorder(new Color(226, 232, 240), 1, true),
                        BorderFactory.createEmptyBorder(12, 16, 14, 16)
                    )
                ));
            }
            
            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
                card.setBorder(BorderFactory.createCompoundBorder(
                    BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(accentColor.getRed(), accentColor.getGreen(), accentColor.getBlue(), 90)),
                    BorderFactory.createCompoundBorder(
                        BorderFactory.createLineBorder(new Color(226, 232, 240), 1, true),
                        BorderFactory.createEmptyBorder(12, 16, 14, 16)
                    )
                ));
            }
        });
    }

    /**
     * Helper method to style a label consistently
     * 
     * @param label The label to style
     * @param color The text color
     * @param size The font size
     * @param style The font style
     */
    private void styleLabel(JLabel label, Color color, int size, int style) {
        label.setFont(new Font("Segoe UI", style, size));
        label.setForeground(color);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel announcementsCard;
    private javax.swing.JTextArea announcementsTextArea;
    private javax.swing.JLabel availableSlotsValueLabel;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel landlordContactNumberValueLabel;
    private javax.swing.JLabel landlordNameValueLabel;
    private javax.swing.JLabel revenueTitleLabel;
    private javax.swing.JLabel revenueTitleLabel1;
    private javax.swing.JLabel revenueTitleLabel2;
    private javax.swing.JPanel roomInformationCard;
    private javax.swing.JPanel roomInformationCard1;
    private javax.swing.JLabel roomNumberValueLabel;
    private javax.swing.JLabel roomNumberValueLabel1;
    private javax.swing.JLabel rulesLabel;
    private javax.swing.JLabel tenantDashboardHeaderLabel;
    private javax.swing.JPanel totalTenantsCard1;
    // End of variables declaration//GEN-END:variables
}
