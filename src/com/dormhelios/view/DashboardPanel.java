package com.dormhelios.view;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import java.awt.Cursor;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.BorderLayout;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.axis.CategoryAxis;

public class DashboardPanel extends javax.swing.JPanel {

    /**
     * Creates new form DashboardPanel
     */
    public DashboardPanel() {
        initComponents();
        applyCustomStyling(); // Apply our custom styling after initialization
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        totalTenantsCard = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        totalTenantsLabel = new javax.swing.JLabel();
        tenantChangeLabel = new javax.swing.JLabel();
        tenantIconLabel = new javax.swing.JLabel();
        occupancyCard = new javax.swing.JPanel();
        occupancyTitleLabel = new javax.swing.JLabel();
        occupancyDetailLabel = new javax.swing.JLabel();
        occupancyIconLabel = new javax.swing.JLabel();
        occupancyRateLabel = new javax.swing.JLabel();
        revenueCard = new javax.swing.JPanel();
        revenueTitleLabel = new javax.swing.JLabel();
        monthlyRevenueLabel = new javax.swing.JLabel();
        revenueIconLabel = new javax.swing.JLabel();
        paymentStatusPanel = new javax.swing.JPanel();
        paymentStatusTitleLabel = new javax.swing.JLabel();
        chartContainerPanel = new javax.swing.JPanel();
        recentActivitiesPanel = new javax.swing.JPanel();
        recentActivitiesTitleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        recentActivitiesList = new javax.swing.JList<>();
        remindersPanel = new javax.swing.JPanel();
        remindersTitleLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        remindersList = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        quickActionsTitleLabel = new javax.swing.JLabel();
        newPaymentButton = new javax.swing.JButton();
        addTenantButton = new javax.swing.JButton();
        sendReminderButton = new javax.swing.JButton();
        addRoomButton = new javax.swing.JButton();

        jFormattedTextField1.setText("jFormattedTextField1");

        setBackground(new java.awt.Color(250, 250, 250));
        setPreferredSize(new java.awt.Dimension(1023, 787));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        jLabel1.setText("Dashboard");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        totalTenantsCard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel2.setText("Total Tenants");

        totalTenantsLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        totalTenantsLabel.setText("...");

        tenantChangeLabel.setText("+5 this month");

        tenantIconLabel.setText("placeholder");

        javax.swing.GroupLayout totalTenantsCardLayout = new javax.swing.GroupLayout(totalTenantsCard);
        totalTenantsCard.setLayout(totalTenantsCardLayout);
        totalTenantsCardLayout.setHorizontalGroup(
            totalTenantsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalTenantsCardLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(totalTenantsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(totalTenantsCardLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(totalTenantsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tenantChangeLabel)
                            .addComponent(totalTenantsLabel))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(totalTenantsCardLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                        .addComponent(tenantIconLabel)
                        .addGap(5, 5, 5))))
        );
        totalTenantsCardLayout.setVerticalGroup(
            totalTenantsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalTenantsCardLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(totalTenantsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tenantIconLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(totalTenantsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tenantChangeLabel)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        occupancyCard.setPreferredSize(new java.awt.Dimension(298, 134));

        occupancyTitleLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        occupancyTitleLabel.setText("Occupancy Rate");

        occupancyDetailLabel.setText("15 out of 25 rooms");

        occupancyIconLabel.setText("placeholder");

        occupancyRateLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        occupancyRateLabel.setText("...");

        javax.swing.GroupLayout occupancyCardLayout = new javax.swing.GroupLayout(occupancyCard);
        occupancyCard.setLayout(occupancyCardLayout);
        occupancyCardLayout.setHorizontalGroup(
            occupancyCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(occupancyCardLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(occupancyCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(occupancyCardLayout.createSequentialGroup()
                        .addComponent(occupancyTitleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addComponent(occupancyIconLabel))
                    .addGroup(occupancyCardLayout.createSequentialGroup()
                        .addGroup(occupancyCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(occupancyRateLabel)
                            .addComponent(occupancyDetailLabel))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        occupancyCardLayout.setVerticalGroup(
            occupancyCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(occupancyCardLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(occupancyCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(occupancyTitleLabel)
                    .addComponent(occupancyIconLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(occupancyRateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(occupancyDetailLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        revenueTitleLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        revenueTitleLabel.setText("Monthly Revenue");

        monthlyRevenueLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        monthlyRevenueLabel.setText("...");

        revenueIconLabel.setText("placeholder");

        javax.swing.GroupLayout revenueCardLayout = new javax.swing.GroupLayout(revenueCard);
        revenueCard.setLayout(revenueCardLayout);
        revenueCardLayout.setHorizontalGroup(
            revenueCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(revenueCardLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(revenueCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(monthlyRevenueLabel)
                    .addGroup(revenueCardLayout.createSequentialGroup()
                        .addComponent(revenueTitleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(revenueIconLabel)))
                .addContainerGap())
        );
        revenueCardLayout.setVerticalGroup(
            revenueCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(revenueCardLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(revenueCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(revenueTitleLabel)
                    .addComponent(revenueIconLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(monthlyRevenueLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        paymentStatusTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        paymentStatusTitleLabel.setText("Payment Status");

        chartContainerPanel.setBackground(new java.awt.Color(255, 255, 153));

        javax.swing.GroupLayout chartContainerPanelLayout = new javax.swing.GroupLayout(chartContainerPanel);
        chartContainerPanel.setLayout(chartContainerPanelLayout);
        chartContainerPanelLayout.setHorizontalGroup(
            chartContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 605, Short.MAX_VALUE)
        );
        chartContainerPanelLayout.setVerticalGroup(
            chartContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 238, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout paymentStatusPanelLayout = new javax.swing.GroupLayout(paymentStatusPanel);
        paymentStatusPanel.setLayout(paymentStatusPanelLayout);
        paymentStatusPanelLayout.setHorizontalGroup(
            paymentStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentStatusPanelLayout.createSequentialGroup()
                .addGroup(paymentStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paymentStatusPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(paymentStatusTitleLabel))
                    .addGroup(paymentStatusPanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(chartContainerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paymentStatusPanelLayout.setVerticalGroup(
            paymentStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentStatusPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(paymentStatusTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chartContainerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        recentActivitiesTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        recentActivitiesTitleLabel.setText("Recent Activities");

        recentActivitiesList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(recentActivitiesList);

        javax.swing.GroupLayout recentActivitiesPanelLayout = new javax.swing.GroupLayout(recentActivitiesPanel);
        recentActivitiesPanel.setLayout(recentActivitiesPanelLayout);
        recentActivitiesPanelLayout.setHorizontalGroup(
            recentActivitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recentActivitiesPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(recentActivitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(recentActivitiesTitleLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        recentActivitiesPanelLayout.setVerticalGroup(
            recentActivitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recentActivitiesPanelLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(recentActivitiesTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        remindersTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        remindersTitleLabel.setText("Reminders & Alerts");

        remindersList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(remindersList);

        javax.swing.GroupLayout remindersPanelLayout = new javax.swing.GroupLayout(remindersPanel);
        remindersPanel.setLayout(remindersPanelLayout);
        remindersPanelLayout.setHorizontalGroup(
            remindersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remindersPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(remindersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(remindersPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(remindersTitleLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        remindersPanelLayout.setVerticalGroup(
            remindersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remindersPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(remindersTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        quickActionsTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        quickActionsTitleLabel.setText("Quick Actions");

        newPaymentButton.setText("New Payment");

        addTenantButton.setText("Add Tenant");

        sendReminderButton.setText("Send Reminder");

        addRoomButton.setText("Add Room");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(sendReminderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(addTenantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(27, 27, 27)
                            .addComponent(newPaymentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(quickActionsTitleLabel))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(quickActionsTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPaymentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addTenantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendReminderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(totalTenantsCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(occupancyCard, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(paymentStatusPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(remindersPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(revenueCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(recentActivitiesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(occupancyCard, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(totalTenantsCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(revenueCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(recentActivitiesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paymentStatusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remindersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
public void setTotalTenants(int count, String changeText) {
        totalTenantsLabel.setText(String.valueOf(count));
        tenantChangeLabel.setText(changeText); // e.g., "+5 this month"
    }

    public void setOccupancyRate(String rateText, String detailText) {
        occupancyRateLabel.setText(rateText); // e.g., "67%"
        occupancyDetailLabel.setText(detailText); // e.g., "10 out of 15 rooms"
    }

    public void setMonthlyRevenue(String revenueText) {
        monthlyRevenueLabel.setText(revenueText); // e.g., "P8,500.00" (Format in controller)
    }

    // Method to update the chart (Placeholder - requires a charting library)
    public JPanel getChartPanel() {
        return chartContainerPanel;
        // The controller would get this panel and add the actual chart component
        // from a library like JFreeChart or Apache Commons Chart.
    }

    // Methods to update lists (Example using DefaultListModel for JList)
    public DefaultListModel<String> getRemindersListModel() {
        // Assuming a JList named remindersList is used
        if (!(remindersList.getModel() instanceof DefaultListModel)) {
            remindersList.setModel(new DefaultListModel<>());
        }
        return (DefaultListModel<String>) remindersList.getModel();
    }

    public DefaultListModel<String> getRecentActivitiesListModel() {
        // Assuming a JList named recentActivitiesList is used
        if (!(recentActivitiesList.getModel() instanceof DefaultListModel)) {
            recentActivitiesList.setModel(new DefaultListModel<>());
        }
        return (DefaultListModel<String>) recentActivitiesList.getModel();
    }
    
    public void addAddTenantButtonListener(ActionListener listener) {
        // Assuming button is named addTenantButton
        addTenantButton.addActionListener(listener);
    }

    public void addNewPaymentButtonListener(ActionListener listener) {
        // Assuming button is named newPaymentButton
        newPaymentButton.addActionListener(listener);
    }

    public void addSendReminderButtonListener(ActionListener listener) {
        // Assuming button is named sendReminderButton
        sendReminderButton.addActionListener(listener);
    }

    public void addAddRoomButtonListener(ActionListener listener) {
        // Assuming button is named addRoomButton
        addRoomButton.addActionListener(listener);
    }

    /**
     * Creates and displays a payment status bar chart using JFreeChart
     * 
     * @param months The month labels for the x-axis
     * @param paidCounts The number of paid payments for each month
     * @param unpaidCounts The number of unpaid/outstanding payments for each month
     */
    public void displayPaymentBarChart(String[] months, int[] paidCounts, int[] unpaidCounts) {
        // Clear existing components in the chart panel
        chartContainerPanel.removeAll();
        
        // Create dataset for the chart
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        // Populate the dataset with payment data
        for (int i = 0; i < months.length; i++) {
            dataset.addValue(paidCounts[i], "Paid", months[i]);
            dataset.addValue(unpaidCounts[i], "Unpaid", months[i]);
        }
        
        // Create the chart
        JFreeChart barChart = ChartFactory.createBarChart(
                "",                     // chart title
                "Month",                // domain axis label
                "Number of Payments",   // range axis label
                dataset,                // data
                PlotOrientation.VERTICAL, // orientation
                true,                   // include legend
                true,                   // tooltips
                false                   // URLs
        );
        
        // Customize the chart
        barChart.setBackgroundPaint(Color.WHITE);
        
        // Get and customize the plot
        CategoryPlot plot = (CategoryPlot) barChart.getPlot();
        plot.setBackgroundPaint(Color.WHITE);
        plot.setDomainGridlinePaint(new Color(220, 220, 220));
        plot.setRangeGridlinePaint(new Color(220, 220, 220));
        
        // Set color for bars
        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setSeriesPaint(0, new Color(16, 185, 129));  // emerald-500 for Paid
        renderer.setSeriesPaint(1, new Color(239, 68, 68));   // red-500 for Unpaid
        renderer.setDrawBarOutline(false);
        renderer.setShadowVisible(false);
        renderer.setItemMargin(0.1);
        
        // Customize domain axis (X-axis)
        CategoryAxis domainAxis = plot.getDomainAxis();
        domainAxis.setCategoryMargin(0.2);
        domainAxis.setLowerMargin(0.05);
        domainAxis.setUpperMargin(0.05);
        
        // Create ChartPanel with the chart
        ChartPanel chartPanel = new ChartPanel(barChart);
        chartPanel.setPreferredSize(new Dimension(chartContainerPanel.getWidth(), chartContainerPanel.getHeight()));
        chartPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        
        // Add chart panel to the container panel using BorderLayout
        chartContainerPanel.setLayout(new BorderLayout());
        chartContainerPanel.add(chartPanel, BorderLayout.CENTER);
        
        // Repaint to show the new chart
        chartContainerPanel.revalidate();
        chartContainerPanel.repaint();
    }

    /**
     * Applies custom Tailwind-inspired styling to the dashboard panel components.
     * Call this method after initComponents() in the constructor.
     */
    private void applyCustomStyling() {
        // Tailwind color palette
        Color primary = new Color(59, 130, 246);     // blue-500
        Color primaryLight = new Color(96, 165, 250); // blue-400
        Color success = new Color(34, 197, 94);      // green-500 
        Color successLight = new Color(74, 222, 128); // green-400
        Color danger = new Color(239, 68, 68);       // red-500
        Color warning = new Color(245, 158, 11);     // amber-500
        Color warningLight = new Color(251, 191, 36); // amber-400
        Color purple = new Color(147, 51, 234);      // purple-600
        Color purpleLight = new Color(192, 132, 252); // purple-400
        Color cyan = new Color(8, 145, 178);         // cyan-600
        Color emerald = new Color(16, 185, 129);     // emerald-500
        Color orange = new Color(249, 115, 22);      // orange-500
        Color orangeLight = new Color(251, 146, 60); // orange-400
        Color indigo = new Color(79, 70, 229);       // indigo-600
        Color indigoLight = new Color(129, 140, 248); // indigo-400
        Color bgLight = new Color(243, 244, 246);    // gray-100
        Color slate100 = new Color(241, 245, 249);   // slate-100
        
        // Background styling
        this.setBackground(bgLight);
        
        // Style title bar
        jPanel1.setBackground(Color.WHITE);
        jPanel1.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createMatteBorder(0, 0, 1, 0, slate100),
            BorderFactory.createEmptyBorder(8, 16, 8, 16)
        ));
        jLabel1.setForeground(Color.BLACK);
        
        // Style the main dashboard cards with modern Tailwind-style
        styleCard(totalTenantsCard, primary, primaryLight, "👥", "Total Tenants");
        styleCard(occupancyCard, emerald, successLight, "🏠", "Occupancy Rate");
        styleCard(revenueCard, indigo, indigoLight, "💰", "Monthly Revenue");
        
        // Style the content metrics within the cards
        totalTenantsLabel.setForeground(primary);
        tenantChangeLabel.setForeground(new Color(primary.getRed(), primary.getGreen(), primary.getBlue(), 200));
        
        occupancyRateLabel.setForeground(emerald);
        occupancyDetailLabel.setForeground(new Color(emerald.getRed(), emerald.getGreen(), emerald.getBlue(), 200));
        
        monthlyRevenueLabel.setForeground(indigo);
        
        // Style the larger panels
        stylePanel(paymentStatusPanel, slate100, "Payment Status");
        stylePanel(recentActivitiesPanel, slate100, "Recent Activities");
        stylePanel(remindersPanel, slate100, "Reminders & Alerts");
        stylePanel(jPanel2, slate100, "Quick Actions");
        
        // Style the chart placeholder
        chartContainerPanel.setBackground(Color.WHITE);
        chartContainerPanel.setBorder(BorderFactory.createLineBorder(slate100, 1, true));
        
        // Style the list components
        remindersList.setBackground(Color.WHITE);
        remindersList.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        remindersList.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        
        recentActivitiesList.setBackground(Color.WHITE);
        recentActivitiesList.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        recentActivitiesList.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        
        // Style scroll panes
        styleScrollPane(jScrollPane1);
        styleScrollPane(jScrollPane2);
        
        // Style action buttons with different colors
        styleButton(addTenantButton, primary, "Add Tenant");
        styleButton(newPaymentButton, emerald, "New Payment");
        styleButton(sendReminderButton, warning, "Send Reminder");
        styleButton(addRoomButton, indigo, "Add Room");
    }
    
    /**
     * Helper method to style a card with a Tailwind-inspired gradient background
     * 
     * @param card The panel to style
     * @param mainColor The primary color
     * @param lightColor The lighter version of the color for gradient
     * @param iconText The icon text (emoji or character)
     * @param title The title of the card (for identifying labels)
     */
    private void styleCard(JPanel card, Color mainColor, Color lightColor, String iconText, String title) {
        // Define slate colors locally
        Color slate700 = new Color(51, 65, 85);      // slate-700
        
        // Set a gradient background effect
        card.setBackground(Color.WHITE);
        
        // Add rounded corners and border with shadow effect
        card.setBorder(BorderFactory.createCompoundBorder(
                BorderFactory.createEmptyBorder(1, 1, 3, 3),
                BorderFactory.createCompoundBorder(
                    BorderFactory.createLineBorder(new Color(mainColor.getRed(), mainColor.getGreen(), mainColor.getBlue(), 40), 1, true),
                    BorderFactory.createEmptyBorder(12, 16, 12, 16)
                )
        ));
        
        // Find and style the icon label and title label
        for (Component comp : card.getComponents()) {
            if (comp instanceof JLabel) {
                JLabel label = (JLabel) comp;
                
                // Style the icon label
                if (label.getText().equals("placeholder")) {
                    label.setText(iconText);
                    label.setFont(new Font("Segoe UI", Font.PLAIN, 24));
                    label.setForeground(mainColor);
                    
                    // Create a rounded background for the icon
                    label.setOpaque(true);
                    label.setBackground(new Color(mainColor.getRed(), mainColor.getGreen(), mainColor.getBlue(), 20));
                    label.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
                }
                // Style the title label
                else if (label.getText().contains(title) || title.contains(label.getText())) {
                    label.setForeground(slate700);
                    label.setFont(new Font("Segoe UI SemiBold", Font.BOLD, 20));
                }
                // Leave the data labels alone - we style them separately
            }
        }
        
        // Add a subtle left border accent
        card.setBorder(BorderFactory.createCompoundBorder(
                BorderFactory.createMatteBorder(0, 4, 0, 0, mainColor),
                card.getBorder()
        ));
    }
    
    /**
     * Helper method to style a panel with consistent styling
     * 
     * @param panel The panel to style
     * @param bgColor The background color
     * @param title The title text
     */
    private void stylePanel(JPanel panel, Color bgColor, String title) {
        // Define slate colors locally
        Color slate200 = new Color(226, 232, 240);   // slate-200
        Color slate800 = new Color(30, 41, 59);      // slate-800
        
        panel.setBackground(Color.WHITE);
        panel.setBorder(BorderFactory.createCompoundBorder(
                BorderFactory.createLineBorder(new Color(slate200.getRed(), slate200.getGreen(), slate200.getBlue(), 200), 1, true),
                BorderFactory.createEmptyBorder(15, 20, 15, 20)
        ));
        
        // Find and style the title label
        for (Component comp : panel.getComponents()) {
            if (comp instanceof JLabel) {
                JLabel label = (JLabel) comp;
                if (label.getText().contains(title) || title.contains(label.getText())) {
                    label.setForeground(slate800);
                    label.setFont(new Font("Segoe UI", Font.BOLD, 20));
                    // Add a bottom border to the title
                    label.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(slate200.getRed(), slate200.getGreen(), slate200.getBlue(), 150)));
                }
            }
        }
    }
    
    /**
     * Helper method to style scroll panes consistently
     * 
     * @param scrollPane The scroll pane to style
     */
    private void styleScrollPane(JScrollPane scrollPane) {
        // Define slate color locally
        Color slate200 = new Color(226, 232, 240);   // slate-200
        
        scrollPane.setBorder(BorderFactory.createLineBorder(slate200, 1));
        scrollPane.getViewport().setBackground(Color.WHITE);
    }
    
    /**
     * Helper method to style a button with Tailwind-inspired styles
     * 
     * @param button The button to style
     * @param color The main button color
     * @param text Optional text to set
     */
    private void styleButton(JButton button, Color color, String text) {
        if (text != null && !text.isEmpty()) {
            button.setText(text);
        }
        
        button.setBackground(color);
        button.setForeground(Color.WHITE);
        button.setFont(button.getFont().deriveFont(Font.BOLD));
        button.setBorderPainted(false);
        button.setFocusPainted(false);
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));
        
        // Add padding for better appearance
        button.setMargin(new java.awt.Insets(8, 14, 8, 14));
        
        // Add hover effect using MouseListener
        button.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button.setBackground(new Color(
                        Math.min(color.getRed() + 20, 255),
                        Math.min(color.getGreen() + 20, 255),
                        Math.min(color.getBlue() + 20, 255)
                ));
            }
            
            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button.setBackground(color);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRoomButton;
    private javax.swing.JButton addTenantButton;
    private javax.swing.JPanel chartContainerPanel;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel monthlyRevenueLabel;
    private javax.swing.JButton newPaymentButton;
    private javax.swing.JPanel occupancyCard;
    private javax.swing.JLabel occupancyDetailLabel;
    private javax.swing.JLabel occupancyIconLabel;
    private javax.swing.JLabel occupancyRateLabel;
    private javax.swing.JLabel occupancyTitleLabel;
    private javax.swing.JPanel paymentStatusPanel;
    private javax.swing.JLabel paymentStatusTitleLabel;
    private javax.swing.JLabel quickActionsTitleLabel;
    private javax.swing.JList<String> recentActivitiesList;
    private javax.swing.JPanel recentActivitiesPanel;
    private javax.swing.JLabel recentActivitiesTitleLabel;
    private javax.swing.JList<String> remindersList;
    private javax.swing.JPanel remindersPanel;
    private javax.swing.JLabel remindersTitleLabel;
    private javax.swing.JPanel revenueCard;
    private javax.swing.JLabel revenueIconLabel;
    private javax.swing.JLabel revenueTitleLabel;
    private javax.swing.JButton sendReminderButton;
    private javax.swing.JLabel tenantChangeLabel;
    private javax.swing.JLabel tenantIconLabel;
    private javax.swing.JPanel totalTenantsCard;
    private javax.swing.JLabel totalTenantsLabel;
    // End of variables declaration//GEN-END:variables
}
